name: Auto Test Pipeline 🛠️

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      # 🛎️ Checkout repository
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v4

      # 🔧 Set up Node.js
      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*' # Use LTS version of Node.js

      # 📦 Install Yarn
      - name: 📦 Install Yarn
        run: corepack enable && yarn set version stable

      # 📥 Install dependencies
      - name: 📥 Install dependencies
        run: yarn install --frozen-lockfile

      # 🧪 Run tests
      - name: 🧪 Run tests
        run: yarn run test:ci | tee test-results.txt

      # 🚮 Clean up test results for comment
      - name: 🚮 Clean up test results
        run: sed -i 's/\x1b\[[0-9;]*m//g' test-results.txt # Removes ANSI color codes

      # 📄 Format test results for better readability
      - name: 📄 Format test results
        run: |
          {
            echo "### 🧪 Test Results"
            echo ""
            if grep -q "failed" test-results.txt; then
              # Extract failed test details if any
              echo "❌ **Some tests failed**:"
              echo '```'
              grep -E "Test Files|Tests|Duration|failed" test-results.txt
              echo '```'
              echo ""
              echo "💥 Please review the failed tests above."
            else
              # Format output for passing tests
              grep -E "(Test Files|Tests|Duration)" test-results.txt | while read -r line; do
                if [[ $line == *"Test Files"* ]]; then
                  echo "🗂 **Test Summary**: $line"
                elif [[ $line == *"Tests"* ]]; then
                  echo "✅ **Tests Passed**: $line"
                elif [[ $line == *"Duration"* ]]; then
                  echo "⏱️ **Total Duration**: $line"
                fi
              done
              echo ""
              echo "🎉 All tests passed successfully!"
            fi
          } > formatted-results.txt

      # 💬 Post formatted test results to PR
      - name: 💬 Comment test results
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const testResults = fs.readFileSync('formatted-results.txt', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: testResults
            });
